<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<!-- NewPage -->
<html lang="fr">
<head>
<!-- Generated by javadoc (1.8.0_242) on Wed Apr 29 16:51:30 CEST 2020 -->
<title>Index</title>
<meta name="date" content="2020-04-29">
<link rel="stylesheet" type="text/css" href="stylesheet.css" title="Style">
<script type="text/javascript" src="script.js"></script>
</head>
<body>
<script type="text/javascript"><!--
    try {
        if (location.href.indexOf('is-external=true') == -1) {
            parent.document.title="Index";
        }
    }
    catch(err) {
    }
//-->
</script>
<noscript>
<div>JavaScript is disabled on your browser.</div>
</noscript>
<!-- ========= START OF TOP NAVBAR ======= -->
<div class="topNav"><a name="navbar.top">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.top" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.top.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="overview-summary.html">Overview</a></li>
<li>Package</li>
<li>Class</li>
<li><a href="overview-tree.html">Tree</a></li>
<li><a href="deprecated-list.html">Deprecated</a></li>
<li class="navBarCell1Rev">Index</li>
<li><a href="help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev</li>
<li>Next</li>
</ul>
<ul class="navList">
<li><a href="index.html?index-all.html" target="_top">Frames</a></li>
<li><a href="index-all.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_top">
<li><a href="allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_top");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<a name="skip.navbar.top">
<!--   -->
</a></div>
<!-- ========= END OF TOP NAVBAR ========= -->
<div class="contentContainer"><a href="#I:A">A</a>&nbsp;<a href="#I:B">B</a>&nbsp;<a href="#I:C">C</a>&nbsp;<a href="#I:D">D</a>&nbsp;<a href="#I:E">E</a>&nbsp;<a href="#I:F">F</a>&nbsp;<a href="#I:G">G</a>&nbsp;<a href="#I:I">I</a>&nbsp;<a href="#I:L">L</a>&nbsp;<a href="#I:M">M</a>&nbsp;<a href="#I:N">N</a>&nbsp;<a href="#I:O">O</a>&nbsp;<a href="#I:P">P</a>&nbsp;<a href="#I:R">R</a>&nbsp;<a href="#I:S">S</a>&nbsp;<a href="#I:T">T</a>&nbsp;<a href="#I:V">V</a>&nbsp;<a href="#I:X">X</a>&nbsp;<a href="#I:Y">Y</a>&nbsp;<a href="#I:Z">Z</a>&nbsp;<a name="I:A">
<!--   -->
</a>
<h2 class="title">A</h2>
<dl>
<dt><span class="memberNameLink"><a href="lumiere/Lumiere.html#approximative-int-double-">approximative(int, double)</a></span> - Method in class lumiere.<a href="lumiere/Lumiere.html" title="class in lumiere">Lumiere</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Droite.html#approximativeDroit-int-double-">approximativeDroit(int, double)</a></span> - Method in class formes.<a href="formes/Droite.html" title="class in formes">Droite</a></dt>
<dd>&nbsp;</dd>
</dl>
<a name="I:B">
<!--   -->
</a>
<h2 class="title">B</h2>
<dl>
<dt><span class="memberNameLink"><a href="main/Interprete.html#boite--">boite()</a></span> - Method in class main.<a href="main/Interprete.html" title="class in main">Interprete</a></dt>
<dd>
<div class="block">
   Cette méthode permet de récupérer les informations importantes concernant
   les box: les points de deux coins de la boites et les informations
   spécifiques tel l'orientation, la couleur, la texture ou la taille de la
   boite.</div>
</dd>
</dl>
<a name="I:C">
<!--   -->
</a>
<h2 class="title">C</h2>
<dl>
<dt><span class="memberNameLink"><a href="formes/Droite.html#calculAngle-formes.Droite-">calculAngle(Droite)</a></span> - Method in class formes.<a href="formes/Droite.html" title="class in formes">Droite</a></dt>
<dd>
<div class="block">la methode calculAngle
 
 cette méthode se base sur des calculs de trigoometrie.</div>
</dd>
<dt><span class="memberNameLink"><a href="formes/Cercle.html#calculDiscriminant-formes.Droite-formes.Point-">calculDiscriminant(Droite, Point)</a></span> - Method in class formes.<a href="formes/Cercle.html" title="class in formes">Cercle</a></dt>
<dd>
<div class="block">la methode calculDiscriminant
 On cherche la valeur de t telquel appartient au cercle.
on se base donc sur l'equation cartesienne du cercle:
((i+at)-x)² + ((j+bt)-y)² + ((k+ct)-z)² - r²=0
 ijk le point de la droite
 abc le vecteur de la droite
 xyz le point centre du cercle
 r le rayon du cercle
 après calcul on trouve une equation du second degré sous la forme at² +bt -c = 0.</div>
</dd>
<dt><span class="memberNameLink"><a href="formes/Cylindre.html#calculDiscriminantCylindreEtDroite-formes.Droite-">calculDiscriminantCylindreEtDroite(Droite)</a></span> - Method in class formes.<a href="formes/Cylindre.html" title="class in formes">Cylindre</a></dt>
<dd>
<div class="block">la methode calculDiscriminantCylindreEtDroite
 On cherche la valeur de t telquel appartient au cercle.
on se base donc sur l'equation cartesienne du cercle:
((i+at)-x)² + ((j+bt)-y)² + ((k+ct)-z)² - r²=0
 ijk le point de la droite
 abc le vecteur de la droite
 xyz le point centre du cercle
 r le rayon du cercle
 après calcul on trouve une equation du second degré sous la forme at² +bt -c = 0.</div>
</dd>
<dt><span class="memberNameLink"><a href="formes/Parallepipede.html#calculdist-formes.Point-formes.Point-">calculdist(Point, Point)</a></span> - Method in class formes.<a href="formes/Parallepipede.html" title="class in formes">Parallepipede</a></dt>
<dd>
<div class="block">la methode calculdist
 Cette méthode nous permet en faisant appel,
a la fonction calculLongueur de la classe Droite,
 de récupérer la distance entre deux points et ainsi,
la largeur et la hauteur du parallelepipède rectangle.</div>
</dd>
<dt><span class="memberNameLink"><a href="formes/Plan.html#calculIntersectPlanDroite-formes.Droite-">calculIntersectPlanDroite(Droite)</a></span> - Method in class formes.<a href="formes/Plan.html" title="class in formes">Plan</a></dt>
<dd>
<div class="block">la methode calculIntersectPlanDroite
 
Cette méthode nous permet de récupérer les differente méthode permettant de 
calculer le point d'intersection afin d'aleger le code dans les differente forme.</div>
</dd>
<dt><span class="memberNameLink"><a href="formes/Droite.html#calculLongueur--">calculLongueur()</a></span> - Method in class formes.<a href="formes/Droite.html" title="class in formes">Droite</a></dt>
<dd>
<div class="block">la methode calculLongueur
 
Afin de calculer la longueur d'un segment, on applique la formule:
 √((Xb - Xa)² + (Yb - Ya)² + (Zb - Za)²)
</div>
</dd>
<dt><span class="memberNameLink"><a href="lumiere/Room.html#cam">cam</a></span> - Variable in class lumiere.<a href="lumiere/Room.html" title="class in lumiere">Room</a></dt>
<dd>
<div class="block"> coordonnées du point de la camera</div>
</dd>
<dt><span class="memberNameLink"><a href="main/Interprete.html#camera--">camera()</a></span> - Method in class main.<a href="main/Interprete.html" title="class in main">Interprete</a></dt>
<dd>
<div class="block">
   Cette méthode permet de récupérer les informations concernant la caméra:
   sa position, le point qu'elle regarde et son angle</div>
</dd>
<dt><span class="memberNameLink"><a href="formes/Cercle.html#centre">centre</a></span> - Variable in class formes.<a href="formes/Cercle.html" title="class in formes">Cercle</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Sphere.html#centre">centre</a></span> - Variable in class formes.<a href="formes/Sphere.html" title="class in formes">Sphere</a></dt>
<dd>&nbsp;</dd>
<dt><a href="formes/Cercle.html" title="class in formes"><span class="typeNameLink">Cercle</span></a> - Class in <a href="formes/package-summary.html">formes</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Cercle.html#Cercle-formes.Point-double-">Cercle(Point, double)</a></span> - Constructor for class formes.<a href="formes/Cercle.html" title="class in formes">Cercle</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="main/Interprete.html#compteurBox">compteurBox</a></span> - Variable in class main.<a href="main/Interprete.html" title="class in main">Interprete</a></dt>
<dd>
<div class="block">
 variable de type int comptant le nombre d'objet box du povray
 </div>
</dd>
<dt><span class="memberNameLink"><a href="main/Interprete.html#compteurCone">compteurCone</a></span> - Variable in class main.<a href="main/Interprete.html" title="class in main">Interprete</a></dt>
<dd>
<div class="block">
 variable de type int comptant le nombre d'objet cone du povray
 </div>
</dd>
<dt><span class="memberNameLink"><a href="main/Interprete.html#compteurCylindre">compteurCylindre</a></span> - Variable in class main.<a href="main/Interprete.html" title="class in main">Interprete</a></dt>
<dd>
<div class="block">
 variable de type int comptant le nombre d'objet cylindre du povray
 </div>
</dd>
<dt><span class="memberNameLink"><a href="main/Interprete.html#compteurPrism">compteurPrism</a></span> - Variable in class main.<a href="main/Interprete.html" title="class in main">Interprete</a></dt>
<dd>
<div class="block">
 variable de type int comptant le nombre d'objet Prism du povray
 </div>
</dd>
<dt><span class="memberNameLink"><a href="main/Interprete.html#compteurSphere">compteurSphere</a></span> - Variable in class main.<a href="main/Interprete.html" title="class in main">Interprete</a></dt>
<dd>
<div class="block">
 variable de type int comptant le nombre d'objet sphère du povray
 </div>
</dd>
<dt><a href="formes/Cone.html" title="class in formes"><span class="typeNameLink">Cone</span></a> - Class in <a href="formes/package-summary.html">formes</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Cone.html#Cone-formes.Point-formes.Point-double-double-javafx.scene.paint.Color-">Cone(Point, Point, double, double, Color)</a></span> - Constructor for class formes.<a href="formes/Cone.html" title="class in formes">Cone</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Cone.html#Cone--">Cone()</a></span> - Constructor for class formes.<a href="formes/Cone.html" title="class in formes">Cone</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="lumiere/Room.html#cone">cone</a></span> - Variable in class lumiere.<a href="lumiere/Room.html" title="class in lumiere">Room</a></dt>
<dd>
<div class="block"> ArrayList contenant l'ensemble des cones à représenter </div>
</dd>
<dt><span class="memberNameLink"><a href="main/Interprete.html#cone--">cone()</a></span> - Method in class main.<a href="main/Interprete.html" title="class in main">Interprete</a></dt>
<dd>
<div class="block">
   Cette méthode permet de récupérer les informations importantes concernant
   les cylindre: les centres et le rayons des cercles du cone et les informations
   spécifiques tel l'orientation, la couleur, la texture ou la taille du
   cone.</div>
</dd>
<dt><span class="memberNameLink"><a href="formes/Cone.html#coul">coul</a></span> - Variable in class formes.<a href="formes/Cone.html" title="class in formes">Cone</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Cylindre.html#coul">coul</a></span> - Variable in class formes.<a href="formes/Cylindre.html" title="class in formes">Cylindre</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Parallepipede.html#coul">coul</a></span> - Variable in class formes.<a href="formes/Parallepipede.html" title="class in formes">Parallepipede</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Sphere.html#coul">coul</a></span> - Variable in class formes.<a href="formes/Sphere.html" title="class in formes">Sphere</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="lumiere/Lumiere.html#creaDroiteAPartirDAngle-double-formes.Droite-formes.Droite-">creaDroiteAPartirDAngle(double, Droite, Droite)</a></span> - Method in class lumiere.<a href="lumiere/Lumiere.html" title="class in lumiere">Lumiere</a></dt>
<dd>
<div class="block">la methode creaDroiteAPartirDAngle
 
 on applique ici les règles de rotation Vectoriel.</div>
</dd>
<dt><span class="memberNameLink"><a href="lumiere/Lumiere.html#creaRayonIncident--">creaRayonIncident()</a></span> - Method in class lumiere.<a href="lumiere/Lumiere.html" title="class in lumiere">Lumiere</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="lumiere/Room.html#createForme--">createForme()</a></span> - Method in class lumiere.<a href="lumiere/Room.html" title="class in lumiere">Room</a></dt>
<dd>
<div class="block"> méthode retournant l'image à enregistrer, parcours les liste d'objets mise en paramètres
et dessine les formes dans une WritableImage</div>
</dd>
<dt><span class="memberNameLink"><a href="lumiere/Room.html#cyl">cyl</a></span> - Variable in class lumiere.<a href="lumiere/Room.html" title="class in lumiere">Room</a></dt>
<dd>
<div class="block"> ArrayList contenant l'ensemble des cylindre à dessiner </div>
</dd>
<dt><a href="formes/Cylindre.html" title="class in formes"><span class="typeNameLink">Cylindre</span></a> - Class in <a href="formes/package-summary.html">formes</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Cylindre.html#Cylindre-formes.Point-formes.Point-double-javafx.scene.paint.Color-">Cylindre(Point, Point, double, Color)</a></span> - Constructor for class formes.<a href="formes/Cylindre.html" title="class in formes">Cylindre</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="main/Interprete.html#cylindre--">cylindre()</a></span> - Method in class main.<a href="main/Interprete.html" title="class in main">Interprete</a></dt>
<dd>
<div class="block">
   Cette méthode permet de récupérer les informations importantes concernant
   les cylindre: les centres et le rayon des cercles du cylindres et les informations
   spécifiques tel l'orientation, la couleur, la texture ou la taille du
   cylindre.</div>
</dd>
</dl>
<a name="I:D">
<!--   -->
</a>
<h2 class="title">D</h2>
<dl>
<dt><span class="memberNameLink"><a href="lumiere/Shadow.html#diffuse-double-">diffuse(double)</a></span> - Method in class lumiere.<a href="lumiere/Shadow.html" title="class in lumiere">Shadow</a></dt>
<dd>
<div class="block">la méthode diffuse
 
 Cette méthode reprend la formule de composante diffuse de phong:
I = Ip * Kd * cos(a)
I donnant la composante diffuse en un point
Ip étant l'intensité de la lumière, 
a l'angle entre la normal et la lumière,
kd la constante de la composante diffuse (comprise entre 0 et 1) qui dépend de l'aspect de l'objet.</div>
</dd>
<dt><a href="formes/Droite.html" title="class in formes"><span class="typeNameLink">Droite</span></a> - Class in <a href="formes/package-summary.html">formes</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Droite.html#Droite-formes.Point-formes.Point-">Droite(Point, Point)</a></span> - Constructor for class formes.<a href="formes/Droite.html" title="class in formes">Droite</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Droite.html#Droite--">Droite()</a></span> - Constructor for class formes.<a href="formes/Droite.html" title="class in formes">Droite</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Cone.html#droiteNormal-formes.Point-">droiteNormal(Point)</a></span> - Method in class formes.<a href="formes/Cone.html" title="class in formes">Cone</a></dt>
<dd>
<div class="block">la methode droiteNormal
 Une fois le point incidence récuperé, on crée un vecteur orthogonal a deux autres vecteur
 le vecteur sommet incidence et le vecteur incidence point de la base circulaire appartenant a la droite.</div>
</dd>
<dt><span class="memberNameLink"><a href="formes/Cylindre.html#droiteNormal-formes.Point-">droiteNormal(Point)</a></span> - Method in class formes.<a href="formes/Cylindre.html" title="class in formes">Cylindre</a></dt>
<dd>
<div class="block">la methode droiteNormal
 On a creer le point d'incidence.</div>
</dd>
<dt><span class="memberNameLink"><a href="formes/Parallepipede.html#droiteNormal-formes.Point-">droiteNormal(Point)</a></span> - Method in class formes.<a href="formes/Parallepipede.html" title="class in formes">Parallepipede</a></dt>
<dd>
<div class="block">la methode droiteNormal
 Dans cette méthode, on calcul la droite normal d'un objet en un point.</div>
</dd>
<dt><span class="memberNameLink"><a href="formes/Sphere.html#droiteNormal-formes.Point-">droiteNormal(Point)</a></span> - Method in class formes.<a href="formes/Sphere.html" title="class in formes">Sphere</a></dt>
<dd>&nbsp;</dd>
</dl>
<a name="I:E">
<!--   -->
</a>
<h2 class="title">E</h2>
<dl>
<dt><span class="memberNameLink"><a href="formes/Parallepipede.html#estDansFace-formes.Point-formes.Plan-formes.Point-">estDansFace(Point, Plan, Point)</a></span> - Method in class formes.<a href="formes/Parallepipede.html" title="class in formes">Parallepipede</a></dt>
<dd>
<div class="block">la methode estDansFace
Comme le théoreme de Möller prend en compte que des triangles,
cette fonction permet de prendre en compte des faces entiers (une face étant composée de deux triangle).</div>
</dd>
<dt><span class="memberNameLink"><a href="formes/Parallepipede.html#estDansMiFace-formes.Point-formes.Plan-">estDansMiFace(Point, Plan)</a></span> - Method in class formes.<a href="formes/Parallepipede.html" title="class in formes">Parallepipede</a></dt>
<dd>
<div class="block">la methode estDansMiFace
 Premiere idée : Pour vérifier la présence d'un point sur une face, on prend un point qui sera l'origine et deux autre point.</div>
</dd>
<dt><a href="formes/Executable.html" title="class in formes"><span class="typeNameLink">Executable</span></a> - Class in <a href="formes/package-summary.html">formes</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Executable.html#Executable--">Executable()</a></span> - Constructor for class formes.<a href="formes/Executable.html" title="class in formes">Executable</a></dt>
<dd>&nbsp;</dd>
</dl>
<a name="I:F">
<!--   -->
</a>
<h2 class="title">F</h2>
<dl>
<dt><span class="memberNameLink"><a href="main/Interprete.html#fichier">fichier</a></span> - Variable in class main.<a href="main/Interprete.html" title="class in main">Interprete</a></dt>
<dd>
<div class="block">
 variable de type string contenant le fichier povray
 </div>
</dd>
<dt><a href="formes/package-summary.html">formes</a> - package formes</dt>
<dd>&nbsp;</dd>
</dl>
<a name="I:G">
<!--   -->
</a>
<h2 class="title">G</h2>
<dl>
<dt><span class="memberNameLink"><a href="formes/Cone.html#getBas--">getBas()</a></span> - Method in class formes.<a href="formes/Cone.html" title="class in formes">Cone</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Cylindre.html#getBas--">getBas()</a></span> - Method in class formes.<a href="formes/Cylindre.html" title="class in formes">Cylindre</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Sphere.html#getCentre--">getCentre()</a></span> - Method in class formes.<a href="formes/Sphere.html" title="class in formes">Sphere</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Cone.html#getCoul--">getCoul()</a></span> - Method in class formes.<a href="formes/Cone.html" title="class in formes">Cone</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Cylindre.html#getCoul--">getCoul()</a></span> - Method in class formes.<a href="formes/Cylindre.html" title="class in formes">Cylindre</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Parallepipede.html#getCoul--">getCoul()</a></span> - Method in class formes.<a href="formes/Parallepipede.html" title="class in formes">Parallepipede</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Sphere.html#getCoul--">getCoul()</a></span> - Method in class formes.<a href="formes/Sphere.html" title="class in formes">Sphere</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Cone.html#getHaut--">getHaut()</a></span> - Method in class formes.<a href="formes/Cone.html" title="class in formes">Cone</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Cylindre.html#getHaut--">getHaut()</a></span> - Method in class formes.<a href="formes/Cylindre.html" title="class in formes">Cylindre</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Parallepipede.html#getPointDebut--">getPointDebut()</a></span> - Method in class formes.<a href="formes/Parallepipede.html" title="class in formes">Parallepipede</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Parallepipede.html#getPointFin--">getPointFin()</a></span> - Method in class formes.<a href="formes/Parallepipede.html" title="class in formes">Parallepipede</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="lumiere/Lumiere.html#getpointLumineux--">getpointLumineux()</a></span> - Method in class lumiere.<a href="lumiere/Lumiere.html" title="class in lumiere">Lumiere</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Droite.html#getPrem--">getPrem()</a></span> - Method in class formes.<a href="formes/Droite.html" title="class in formes">Droite</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Plan.html#getPrem--">getPrem()</a></span> - Method in class formes.<a href="formes/Plan.html" title="class in formes">Plan</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Cylindre.html#getRayon--">getRayon()</a></span> - Method in class formes.<a href="formes/Cylindre.html" title="class in formes">Cylindre</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Sphere.html#getRayon--">getRayon()</a></span> - Method in class formes.<a href="formes/Sphere.html" title="class in formes">Sphere</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Cone.html#getRayonB--">getRayonB()</a></span> - Method in class formes.<a href="formes/Cone.html" title="class in formes">Cone</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Cone.html#getRayonH--">getRayonH()</a></span> - Method in class formes.<a href="formes/Cone.html" title="class in formes">Cone</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Droite.html#getSec--">getSec()</a></span> - Method in class formes.<a href="formes/Droite.html" title="class in formes">Droite</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Plan.html#getSec--">getSec()</a></span> - Method in class formes.<a href="formes/Plan.html" title="class in formes">Plan</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Plan.html#getTer--">getTer()</a></span> - Method in class formes.<a href="formes/Plan.html" title="class in formes">Plan</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Point.html#getX--">getX()</a></span> - Method in class formes.<a href="formes/Point.html" title="class in formes">Point</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Vecteur.html#getX--">getX()</a></span> - Method in class formes.<a href="formes/Vecteur.html" title="class in formes">Vecteur</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Point.html#getY--">getY()</a></span> - Method in class formes.<a href="formes/Point.html" title="class in formes">Point</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Vecteur.html#getY--">getY()</a></span> - Method in class formes.<a href="formes/Vecteur.html" title="class in formes">Vecteur</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Point.html#getZ--">getZ()</a></span> - Method in class formes.<a href="formes/Point.html" title="class in formes">Point</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Vecteur.html#getZ--">getZ()</a></span> - Method in class formes.<a href="formes/Vecteur.html" title="class in formes">Vecteur</a></dt>
<dd>&nbsp;</dd>
</dl>
<a name="I:I">
<!--   -->
</a>
<h2 class="title">I</h2>
<dl>
<dt><a href="main/Interprete.html" title="class in main"><span class="typeNameLink">Interprete</span></a> - Class in <a href="main/package-summary.html">main</a></dt>
<dd>
<div class="block"> classe Interprete 
 
 La classe Interprete est la classe qui va extraire toutes les informations
 importantes du fichier povray et qui les renverra sous forme d'ArrayList
 d'ArrayList d'objet de type String.</div>
</dd>
<dt><span class="memberNameLink"><a href="main/Interprete.html#Interprete-java.lang.String-">Interprete(String)</a></span> - Constructor for class main.<a href="main/Interprete.html" title="class in main">Interprete</a></dt>
<dd>
<div class="block">
 Le constructeur prend en attribut un fichier de type povray .</div>
</dd>
</dl>
<a name="I:L">
<!--   -->
</a>
<h2 class="title">L</h2>
<dl>
<dt><span class="memberNameLink"><a href="main/Interprete.html#lectureCompteur--">lectureCompteur()</a></span> - Method in class main.<a href="main/Interprete.html" title="class in main">Interprete</a></dt>
<dd>
<div class="block">
 cette méthode ne retourne rien mais elle permet de compter le
 nombre de chaque objet présent dans le povray et d'afficher la valeur
 des compteurs.</div>
</dd>
<dt><span class="memberNameLink"><a href="lumiere/Room.html#lum">lum</a></span> - Variable in class lumiere.<a href="lumiere/Room.html" title="class in lumiere">Room</a></dt>
<dd>
<div class="block"> coordonnés du point d'où provient la lumière</div>
</dd>
<dt><a href="lumiere/package-summary.html">lumiere</a> - package lumiere</dt>
<dd>&nbsp;</dd>
<dt><a href="lumiere/Lumiere.html" title="class in lumiere"><span class="typeNameLink">Lumiere</span></a> - Class in <a href="lumiere/package-summary.html">lumiere</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="lumiere/Lumiere.html#Lumiere-formes.Point-formes.Point-">Lumiere(Point, Point)</a></span> - Constructor for class lumiere.<a href="lumiere/Lumiere.html" title="class in lumiere">Lumiere</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="main/Interprete.html#lumiere--">lumiere()</a></span> - Method in class main.<a href="main/Interprete.html" title="class in main">Interprete</a></dt>
<dd>
<div class="block">
   Cette méthode permet de récupérer les informations concernant la lumière:
   la position de la source lumineuse et la couleur</div>
</dd>
</dl>
<a name="I:M">
<!--   -->
</a>
<h2 class="title">M</h2>
<dl>
<dt><a href="main/package-summary.html">main</a> - package main</dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Executable.html#main-java.lang.String:A-">main(String[])</a></span> - Static method in class formes.<a href="formes/Executable.html" title="class in formes">Executable</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/TestCercle.html#main-java.lang.String:A-">main(String[])</a></span> - Static method in class formes.<a href="formes/TestCercle.html" title="class in formes">TestCercle</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/TestCone.html#main-java.lang.String:A-">main(String[])</a></span> - Static method in class formes.<a href="formes/TestCone.html" title="class in formes">TestCone</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/TestCylindre.html#main-java.lang.String:A-">main(String[])</a></span> - Static method in class formes.<a href="formes/TestCylindre.html" title="class in formes">TestCylindre</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/TestDroite.html#main-java.lang.String:A-">main(String[])</a></span> - Static method in class formes.<a href="formes/TestDroite.html" title="class in formes">TestDroite</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/TestPlan.html#main-java.lang.String:A-">main(String[])</a></span> - Static method in class formes.<a href="formes/TestPlan.html" title="class in formes">TestPlan</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/TestVecteur.html#main-java.lang.String:A-">main(String[])</a></span> - Static method in class formes.<a href="formes/TestVecteur.html" title="class in formes">TestVecteur</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="lumiere/TestLum.html#main-java.lang.String:A-">main(String[])</a></span> - Static method in class lumiere.<a href="lumiere/TestLum.html" title="class in lumiere">TestLum</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="lumiere/TestSha.html#main-java.lang.String:A-">main(String[])</a></span> - Static method in class lumiere.<a href="lumiere/TestSha.html" title="class in lumiere">TestSha</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="main/Render.html#main-java.lang.String:A-">main(String[])</a></span> - Static method in class main.<a href="main/Render.html" title="class in main">Render</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="main/TestBox.html#main-java.lang.String:A-">main(String[])</a></span> - Static method in class main.<a href="main/TestBox.html" title="class in main">TestBox</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="main/TestCone.html#main-java.lang.String:A-">main(String[])</a></span> - Static method in class main.<a href="main/TestCone.html" title="class in main">TestCone</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="main/TestCylindre.html#main-java.lang.String:A-">main(String[])</a></span> - Static method in class main.<a href="main/TestCylindre.html" title="class in main">TestCylindre</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="main/TestSphere.html#main-java.lang.String:A-">main(String[])</a></span> - Static method in class main.<a href="main/TestSphere.html" title="class in main">TestSphere</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="main/Translate.html#main-java.lang.String:A-">main(String[])</a></span> - Static method in class main.<a href="main/Translate.html" title="class in main">Translate</a></dt>
<dd>&nbsp;</dd>
</dl>
<a name="I:N">
<!--   -->
</a>
<h2 class="title">N</h2>
<dl>
<dt><span class="memberNameLink"><a href="formes/Vecteur.html#normeVecteur--">normeVecteur()</a></span> - Method in class formes.<a href="formes/Vecteur.html" title="class in formes">Vecteur</a></dt>
<dd>
<div class="block">la methode normeVecteur 
 
        La norme d'un vecteur est sa longueur et sa direction.</div>
</dd>
</dl>
<a name="I:O">
<!--   -->
</a>
<h2 class="title">O</h2>
<dl>
<dt><span class="memberNameLink"><a href="lumiere/Lumiere.html#OlindeRodrigues-double-double-double-formes.Vecteur-formes.Vecteur-">OlindeRodrigues(double, double, double, Vecteur, Vecteur)</a></span> - Method in class lumiere.<a href="lumiere/Lumiere.html" title="class in lumiere">Lumiere</a></dt>
<dd>
<div class="block">la methode creaDroiteAPartirDAngle
 
 On recré la formule d'olinde rodrigues de façon a pouvoir l'utiliser en code:
        v​⃗​​  = (cos a)u​⃗​​ + (1 - cos a)(u​⃗​​.​n​⃗​)*n​⃗​​ + (sin a) * (u​⃗​​ x n​⃗​​)
        v est ici le vecteur optenu par la rotation du vecteur de la droite d selon l'angle a.</div>
</dd>
</dl>
<a name="I:P">
<!--   -->
</a>
<h2 class="title">P</h2>
<dl>
<dt><span class="memberNameLink"><a href="lumiere/Room.html#para">para</a></span> - Variable in class lumiere.<a href="lumiere/Room.html" title="class in lumiere">Room</a></dt>
<dd>
<div class="block">ArrayList contenant l'ensembles des parallépides à représenter</div>
</dd>
<dt><a href="formes/Parallepipede.html" title="class in formes"><span class="typeNameLink">Parallepipede</span></a> - Class in <a href="formes/package-summary.html">formes</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Parallepipede.html#Parallepipede-formes.Point-formes.Point-javafx.scene.paint.Color-">Parallepipede(Point, Point, Color)</a></span> - Constructor for class formes.<a href="formes/Parallepipede.html" title="class in formes">Parallepipede</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="main/Interprete.html#pigment-java.lang.String-java.util.ArrayList-">pigment(String, ArrayList&lt;String&gt;)</a></span> - Method in class main.<a href="main/Interprete.html" title="class in main">Interprete</a></dt>
<dd>
<div class="block">
Méthode permettant la gestion des données de type pigment du document povray
c'est à dire la coleur de base de l'objet</div>
</dd>
<dt><a href="formes/Plan.html" title="class in formes"><span class="typeNameLink">Plan</span></a> - Class in <a href="formes/package-summary.html">formes</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Plan.html#Plan-formes.Point-formes.Point-formes.Point-">Plan(Point, Point, Point)</a></span> - Constructor for class formes.<a href="formes/Plan.html" title="class in formes">Plan</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Plan.html#Plan-formes.Droite-formes.Droite-">Plan(Droite, Droite)</a></span> - Constructor for class formes.<a href="formes/Plan.html" title="class in formes">Plan</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Parallepipede.html#planIncid-formes.Point-">planIncid(Point)</a></span> - Method in class formes.<a href="formes/Parallepipede.html" title="class in formes">Parallepipede</a></dt>
<dd>
<div class="block">la methode planIncid
 On verifie si telle ou telle face du parallelepipede continent un point d'impact avec la droite lumiere
 si oui, on verifie la distance entre la source lumineuse et le point d'impact trouvé.</div>
</dd>
<dt><a href="formes/Point.html" title="class in formes"><span class="typeNameLink">Point</span></a> - Class in <a href="formes/package-summary.html">formes</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Point.html#Point-double-double-double-">Point(double, double, double)</a></span> - Constructor for class formes.<a href="formes/Point.html" title="class in formes">Point</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Point.html#Point--">Point()</a></span> - Constructor for class formes.<a href="formes/Point.html" title="class in formes">Point</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Parallepipede.html#point_debut">point_debut</a></span> - Variable in class formes.<a href="formes/Parallepipede.html" title="class in formes">Parallepipede</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Parallepipede.html#point_fin">point_fin</a></span> - Variable in class formes.<a href="formes/Parallepipede.html" title="class in formes">Parallepipede</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Cone.html#pointBas">pointBas</a></span> - Variable in class formes.<a href="formes/Cone.html" title="class in formes">Cone</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Cylindre.html#pointBas">pointBas</a></span> - Variable in class formes.<a href="formes/Cylindre.html" title="class in formes">Cylindre</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Cylindre.html#pointCommunAvecCyl-formes.Droite-formes.Point-">pointCommunAvecCyl(Droite, Point)</a></span> - Method in class formes.<a href="formes/Cylindre.html" title="class in formes">Cylindre</a></dt>
<dd>
<div class="block">la methode pointCommunAvecCyl
 on verrifit ici que le t renvoyé par calculDiscriminantCylindreEtDroite est seul ou non,
si il n'est pas seul c'est que l'on a plusieur possibilité de point.</div>
</dd>
<dt><span class="memberNameLink"><a href="formes/Cone.html#pointHaut">pointHaut</a></span> - Variable in class formes.<a href="formes/Cone.html" title="class in formes">Cone</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Cylindre.html#pointHaut">pointHaut</a></span> - Variable in class formes.<a href="formes/Cylindre.html" title="class in formes">Cylindre</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Parallepipede.html#pointIncid-formes.Point-">pointIncid(Point)</a></span> - Method in class formes.<a href="formes/Parallepipede.html" title="class in formes">Parallepipede</a></dt>
<dd>
<div class="block">la methode pointIncid
 On récupere le point d'incidence, c'est a dire, le point ou le rayon lumineux touche l'objet.</div>
</dd>
<dt><span class="memberNameLink"><a href="formes/Cone.html#pointIncidence-formes.Point-">pointIncidence(Point)</a></span> - Method in class formes.<a href="formes/Cone.html" title="class in formes">Cone</a></dt>
<dd>
<div class="block">la methode pointIncidence
 On calcul le centre du cone:
 on a le centre du cercle servant de base et le sommet du cone.</div>
</dd>
<dt><span class="memberNameLink"><a href="formes/Cylindre.html#pointIncidence-formes.Point-">pointIncidence(Point)</a></span> - Method in class formes.<a href="formes/Cylindre.html" title="class in formes">Cylindre</a></dt>
<dd>
<div class="block">la methode pointIncidence
 Cette méthode permet de récupèrer le point d'impact de la lumière ou point d'incidence sur un cylindre.</div>
</dd>
<dt><span class="memberNameLink"><a href="formes/Sphere.html#pointIncidence-formes.Point-">pointIncidence(Point)</a></span> - Method in class formes.<a href="formes/Sphere.html" title="class in formes">Sphere</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Parallepipede.html#pointIntersect-formes.Droite-formes.Plan-">pointIntersect(Droite, Plan)</a></span> - Method in class formes.<a href="formes/Parallepipede.html" title="class in formes">Parallepipede</a></dt>
<dd>
<div class="block">la methode pointIntersect
 Dans cette méthode, on calcul le point ou la lumière entre en contacte avec la forme.</div>
</dd>
<dt><span class="memberNameLink"><a href="formes/Vecteur.html#produitScalair-formes.Vecteur-">produitScalair(Vecteur)</a></span> - Method in class formes.<a href="formes/Vecteur.html" title="class in formes">Vecteur</a></dt>
<dd>
<div class="block">la methode produitScalair
 
Des vecteurs orhogonaux sont des vecteur dont le produit scalaire est nul, on calcul un produit scalaire en utilisant cette règle:
 u​⃗​​.​v​⃗​​ = xx' + yy' + zz'
 
 ou celle si:
 u​⃗​​.​v​⃗​​ = ∣∣​u​⃗​​∣∣ × ∣∣​v​⃗​​∣∣ × cosinus(​u​⃗​​,​v​⃗​​)
 
 de plus si les vecteurs sont othogonaux, les droites sont perpendiculaire.</div>
</dd>
<dt><span class="memberNameLink"><a href="formes/Vecteur.html#produitVect-formes.Vecteur-double-">produitVect(Vecteur, double)</a></span> - Method in class formes.<a href="formes/Vecteur.html" title="class in formes">Vecteur</a></dt>
<dd>
<div class="block">la methode produitVect 
 
        Cette méthode renvois le vecteur representant le produit vectoriel de this et du vecteur vectd 
 angle est l'angle entre this et le vecteur vectd.</div>
</dd>
</dl>
<a name="I:R">
<!--   -->
</a>
<h2 class="title">R</h2>
<dl>
<dt><span class="memberNameLink"><a href="formes/Cercle.html#rayon">rayon</a></span> - Variable in class formes.<a href="formes/Cercle.html" title="class in formes">Cercle</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Cylindre.html#rayon">rayon</a></span> - Variable in class formes.<a href="formes/Cylindre.html" title="class in formes">Cylindre</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Sphere.html#rayon">rayon</a></span> - Variable in class formes.<a href="formes/Sphere.html" title="class in formes">Sphere</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Cone.html#rayonB">rayonB</a></span> - Variable in class formes.<a href="formes/Cone.html" title="class in formes">Cone</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Cone.html#rayonH">rayonH</a></span> - Variable in class formes.<a href="formes/Cone.html" title="class in formes">Cone</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Parallepipede.html#rayonIncidant-formes.Point-">rayonIncidant(Point)</a></span> - Method in class formes.<a href="formes/Parallepipede.html" title="class in formes">Parallepipede</a></dt>
<dd>
<div class="block">la methode rayonIncidant
 On recherche le point centrale de la forme,
Ici en cherchant le point de contact des diagonal interne du Parallelepipede rectangle.</div>
</dd>
<dt><span class="memberNameLink"><a href="formes/Cylindre.html#recupDroiteLum-formes.Point-">recupDroiteLum(Point)</a></span> - Method in class formes.<a href="formes/Cylindre.html" title="class in formes">Cylindre</a></dt>
<dd>
<div class="block">la methode recupDroiteLum
 On calcul le centre du cylindre:
 on a le centre du cercle servant de base et le centre du cercle superieur.</div>
</dd>
<dt><span class="memberNameLink"><a href="lumiere/Lumiere.html#reflexion-formes.Droite-">reflexion(Droite)</a></span> - Method in class lumiere.<a href="lumiere/Lumiere.html" title="class in lumiere">Lumiere</a></dt>
<dd>
<div class="block">la methode reflexion
 
 Cette methode est utilisé dans le cas où, la lumière atteint
un objet réflechissant.</div>
</dd>
<dt><span class="memberNameLink"><a href="lumiere/Lumiere.html#refraction-formes.Droite-double-double-">refraction(Droite, double, double)</a></span> - Method in class lumiere.<a href="lumiere/Lumiere.html" title="class in lumiere">Lumiere</a></dt>
<dd>
<div class="block">la methode refraction
 
 On calcul ici la droite de refraction.</div>
</dd>
<dt><a href="main/Render.html" title="class in main"><span class="typeNameLink">Render</span></a> - Class in <a href="main/package-summary.html">main</a></dt>
<dd>
<div class="block"> class Render 
 la class render est la classe executable de notre application.</div>
</dd>
<dt><span class="memberNameLink"><a href="main/Render.html#Render--">Render()</a></span> - Constructor for class main.<a href="main/Render.html" title="class in main">Render</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Droite.html#represPram-double-">represPram(double)</a></span> - Method in class formes.<a href="formes/Droite.html" title="class in formes">Droite</a></dt>
<dd>
<div class="block">la methode represPram 
 
        Cette méthode permet de créer la representation parametrique d'une droite.</div>
</dd>
<dt><span class="memberNameLink"><a href="formes/Plan.html#represPram-double-double-">represPram(double, double)</a></span> - Method in class formes.<a href="formes/Plan.html" title="class in formes">Plan</a></dt>
<dd>
<div class="block">la methode represPram
 
Cette méthode calcul la represenation parametrique du plan en fonction d'un t et d'un t'.
une fois que l'on a un t et un t', on peu récuperer un point.</div>
</dd>
<dt><span class="memberNameLink"><a href="formes/Plan.html#retrouveT-formes.Droite-">retrouveT(Droite)</a></span> - Method in class formes.<a href="formes/Plan.html" title="class in formes">Plan</a></dt>
<dd>
<div class="block">la methode retrouveT
 
Cette méthode se base sur un systeme a quatre équation, l'equation de droite, et la representation parametrique de droite.</div>
</dd>
<dt><a href="lumiere/Room.html" title="class in lumiere"><span class="typeNameLink">Room</span></a> - Class in <a href="lumiere/package-summary.html">lumiere</a></dt>
<dd>
<div class="block"> class Room 
 La class room a pour but de créé une Image conteant un
ensemble de formes tout en gérant la lumière et leur ombre </div>
</dd>
<dt><span class="memberNameLink"><a href="lumiere/Room.html#Room-java.util.ArrayList-java.util.ArrayList-java.util.ArrayList-java.util.ArrayList-formes.Point-formes.Point-">Room(ArrayList&lt;Parallepipede&gt;, ArrayList&lt;Sphere&gt;, ArrayList&lt;Cone&gt;, ArrayList&lt;Cylindre&gt;, Point, Point)</a></span> - Constructor for class lumiere.<a href="lumiere/Room.html" title="class in lumiere">Room</a></dt>
<dd>
<div class="block"> prend en paralètre quatre ArrayList représentant les formes à représenter, deux point représentant la camera et source de lumière et appellle la fonction createForme</div>
</dd>
<dt><span class="memberNameLink"><a href="main/Interprete.html#rotate-java.lang.String-java.util.ArrayList-">rotate(String, ArrayList&lt;String&gt;)</a></span> - Method in class main.<a href="main/Interprete.html" title="class in main">Interprete</a></dt>
<dd>
<div class="block">
Méthode permettant la gestion des données de type rotate du document povray
 c'est à dire la rotation d'un objet par rapport à un ou plusieurs axes.</div>
</dd>
</dl>
<a name="I:S">
<!--   -->
</a>
<h2 class="title">S</h2>
<dl>
<dt><span class="memberNameLink"><a href="main/Interprete.html#scale-java.lang.String-java.util.ArrayList-">scale(String, ArrayList&lt;String&gt;)</a></span> - Method in class main.<a href="main/Interprete.html" title="class in main">Interprete</a></dt>
<dd>
<div class="block">
Méthode permettant la gestion des données de type scale du document povray
c'est à dire la taille des objets en fonction des axes x,y,z</div>
</dd>
<dt><span class="memberNameLink"><a href="formes/Point.html#setX-double-">setX(double)</a></span> - Method in class formes.<a href="formes/Point.html" title="class in formes">Point</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Point.html#setY-double-">setY(double)</a></span> - Method in class formes.<a href="formes/Point.html" title="class in formes">Point</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Point.html#setZ-double-">setZ(double)</a></span> - Method in class formes.<a href="formes/Point.html" title="class in formes">Point</a></dt>
<dd>&nbsp;</dd>
<dt><a href="lumiere/Shadow.html" title="class in lumiere"><span class="typeNameLink">Shadow</span></a> - Class in <a href="lumiere/package-summary.html">lumiere</a></dt>
<dd>
<div class="block">la classe Shadow
 
 Cette classe se basesur le modèle de Phong, 
 ce modèle consiste en la création de trois types de lumière sur un objet.</div>
</dd>
<dt><span class="memberNameLink"><a href="lumiere/Shadow.html#Shadow-double-formes.Droite-lumiere.Lumiere-">Shadow(double, Droite, Lumiere)</a></span> - Constructor for class lumiere.<a href="lumiere/Shadow.html" title="class in lumiere">Shadow</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Parallepipede.html#Sommet--">Sommet()</a></span> - Method in class formes.<a href="formes/Parallepipede.html" title="class in formes">Parallepipede</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="lumiere/Shadow.html#speculaire-double-formes.Point-double-">speculaire(double, Point, double)</a></span> - Method in class lumiere.<a href="lumiere/Shadow.html" title="class in lumiere">Shadow</a></dt>
<dd>
<div class="block">la méthode speculaire
 
 Cette méthode reprend la formule de composante spéculaire de phong:
I = Ip * Ks * (cos(a))^n
I donnant la composante spéculaire en un point
Ip étant l'intensité de la lumière, 
a l'angle entre le rayon reflechit et la camera,
kd la constante de la composante spéculaire (comprise entre 0 et 1) qui dépend de l'aspect de l'objet.
n l'intensité spéculaire, plus elle est élevé plus le point est blanc et petit.</div>
</dd>
<dt><a href="formes/Sphere.html" title="class in formes"><span class="typeNameLink">Sphere</span></a> - Class in <a href="formes/package-summary.html">formes</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Sphere.html#Sphere-formes.Point-double-javafx.scene.paint.Color-">Sphere(Point, double, Color)</a></span> - Constructor for class formes.<a href="formes/Sphere.html" title="class in formes">Sphere</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="lumiere/Room.html#sphere">sphere</a></span> - Variable in class lumiere.<a href="lumiere/Room.html" title="class in lumiere">Room</a></dt>
<dd>
<div class="block"> ArrayList conteant l'ensemble des sphères à représenter</div>
</dd>
<dt><span class="memberNameLink"><a href="main/Interprete.html#sphere--">sphere()</a></span> - Method in class main.<a href="main/Interprete.html" title="class in main">Interprete</a></dt>
<dd>
<div class="block">
   Cette méthode permet de récupérer les informations importantes concernant
   les box: le centre et le rayon de la sphère et les informations
   spécifiques tel l'orientation, la couleur, la texture ou la taille de la
   sphère.</div>
</dd>
<dt><span class="memberNameLink"><a href="main/Render.html#start-javafx.stage.Stage-">start(Stage)</a></span> - Method in class main.<a href="main/Render.html" title="class in main">Render</a></dt>
<dd>&nbsp;</dd>
</dl>
<a name="I:T">
<!--   -->
</a>
<h2 class="title">T</h2>
<dl>
<dt><a href="main/TestBox.html" title="class in main"><span class="typeNameLink">TestBox</span></a> - Class in <a href="main/package-summary.html">main</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="main/TestBox.html#TestBox--">TestBox()</a></span> - Constructor for class main.<a href="main/TestBox.html" title="class in main">TestBox</a></dt>
<dd>&nbsp;</dd>
<dt><a href="formes/TestCercle.html" title="class in formes"><span class="typeNameLink">TestCercle</span></a> - Class in <a href="formes/package-summary.html">formes</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/TestCercle.html#TestCercle--">TestCercle()</a></span> - Constructor for class formes.<a href="formes/TestCercle.html" title="class in formes">TestCercle</a></dt>
<dd>&nbsp;</dd>
<dt><a href="formes/TestCone.html" title="class in formes"><span class="typeNameLink">TestCone</span></a> - Class in <a href="formes/package-summary.html">formes</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/TestCone.html#TestCone--">TestCone()</a></span> - Constructor for class formes.<a href="formes/TestCone.html" title="class in formes">TestCone</a></dt>
<dd>&nbsp;</dd>
<dt><a href="main/TestCone.html" title="class in main"><span class="typeNameLink">TestCone</span></a> - Class in <a href="main/package-summary.html">main</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="main/TestCone.html#TestCone--">TestCone()</a></span> - Constructor for class main.<a href="main/TestCone.html" title="class in main">TestCone</a></dt>
<dd>&nbsp;</dd>
<dt><a href="formes/TestCylindre.html" title="class in formes"><span class="typeNameLink">TestCylindre</span></a> - Class in <a href="formes/package-summary.html">formes</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/TestCylindre.html#TestCylindre--">TestCylindre()</a></span> - Constructor for class formes.<a href="formes/TestCylindre.html" title="class in formes">TestCylindre</a></dt>
<dd>&nbsp;</dd>
<dt><a href="main/TestCylindre.html" title="class in main"><span class="typeNameLink">TestCylindre</span></a> - Class in <a href="main/package-summary.html">main</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="main/TestCylindre.html#TestCylindre--">TestCylindre()</a></span> - Constructor for class main.<a href="main/TestCylindre.html" title="class in main">TestCylindre</a></dt>
<dd>&nbsp;</dd>
<dt><a href="formes/TestDroite.html" title="class in formes"><span class="typeNameLink">TestDroite</span></a> - Class in <a href="formes/package-summary.html">formes</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/TestDroite.html#TestDroite--">TestDroite()</a></span> - Constructor for class formes.<a href="formes/TestDroite.html" title="class in formes">TestDroite</a></dt>
<dd>&nbsp;</dd>
<dt><a href="lumiere/TestLum.html" title="class in lumiere"><span class="typeNameLink">TestLum</span></a> - Class in <a href="lumiere/package-summary.html">lumiere</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="lumiere/TestLum.html#TestLum--">TestLum()</a></span> - Constructor for class lumiere.<a href="lumiere/TestLum.html" title="class in lumiere">TestLum</a></dt>
<dd>&nbsp;</dd>
<dt><a href="formes/TestPlan.html" title="class in formes"><span class="typeNameLink">TestPlan</span></a> - Class in <a href="formes/package-summary.html">formes</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/TestPlan.html#TestPlan--">TestPlan()</a></span> - Constructor for class formes.<a href="formes/TestPlan.html" title="class in formes">TestPlan</a></dt>
<dd>&nbsp;</dd>
<dt><a href="lumiere/TestSha.html" title="class in lumiere"><span class="typeNameLink">TestSha</span></a> - Class in <a href="lumiere/package-summary.html">lumiere</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="lumiere/TestSha.html#TestSha--">TestSha()</a></span> - Constructor for class lumiere.<a href="lumiere/TestSha.html" title="class in lumiere">TestSha</a></dt>
<dd>&nbsp;</dd>
<dt><a href="main/TestSphere.html" title="class in main"><span class="typeNameLink">TestSphere</span></a> - Class in <a href="main/package-summary.html">main</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="main/TestSphere.html#TestSphere--">TestSphere()</a></span> - Constructor for class main.<a href="main/TestSphere.html" title="class in main">TestSphere</a></dt>
<dd>&nbsp;</dd>
<dt><a href="formes/TestVecteur.html" title="class in formes"><span class="typeNameLink">TestVecteur</span></a> - Class in <a href="formes/package-summary.html">formes</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/TestVecteur.html#TestVecteur--">TestVecteur()</a></span> - Constructor for class formes.<a href="formes/TestVecteur.html" title="class in formes">TestVecteur</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="main/Interprete.html#texture-java.lang.String-java.util.ArrayList-">texture(String, ArrayList&lt;String&gt;)</a></span> - Method in class main.<a href="main/Interprete.html" title="class in main">Interprete</a></dt>
<dd>
<div class="block">
Méthode permettant la gestion des données de type texture du document povray
c'est à dire la texture de l'objet</div>
</dd>
<dt><span class="memberNameLink"><a href="formes/Point.html#toString--">toString()</a></span> - Method in class formes.<a href="formes/Point.html" title="class in formes">Point</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="main/Interprete.html#translate-java.lang.String-java.util.ArrayList-">translate(String, ArrayList&lt;String&gt;)</a></span> - Method in class main.<a href="main/Interprete.html" title="class in main">Interprete</a></dt>
<dd>
<div class="block">
Méthode permettant la gestion des données de type translate du document povray
c'est à dire le déclage de l'objet pa rapport à un ou plusieurs axes</div>
</dd>
<dt><a href="main/Translate.html" title="class in main"><span class="typeNameLink">Translate</span></a> - Class in <a href="main/package-summary.html">main</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="main/Translate.html#Translate--">Translate()</a></span> - Constructor for class main.<a href="main/Translate.html" title="class in main">Translate</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Droite.html#trouveT-formes.Droite-">trouveT(Droite)</a></span> - Method in class formes.<a href="formes/Droite.html" title="class in formes">Droite</a></dt>
<dd>
<div class="block">la methode trouveT 
 
        Cette méthode permet de retrouver la valeur de t d'une representation parametrique de droite.</div>
</dd>
</dl>
<a name="I:V">
<!--   -->
</a>
<h2 class="title">V</h2>
<dl>
<dt><span class="memberNameLink"><a href="formes/Plan.html#valDEquaPlan--">valDEquaPlan()</a></span> - Method in class formes.<a href="formes/Plan.html" title="class in formes">Plan</a></dt>
<dd>
<div class="block">la methode valDEquaPlan
 
Cette méthode calcul la valeur de de l'equation du plan : 
ax + by + cz + d = 0
d = -ax -by -cz
abc sont le vecteur normal.
xyz sont les coordonnée du point premier du plan.</div>
</dd>
<dt><span class="memberNameLink"><a href="formes/Cone.html#valTSystEquaParam-formes.Droite-double-">valTSystEquaParam(Droite, double)</a></span> - Method in class formes.<a href="formes/Cone.html" title="class in formes">Cone</a></dt>
<dd>
<div class="block">la methode valTSystEquaParam
 resolution d'un systeme a quatre équation entre la representation parametrique de droite
et l'equation quartesienne d'un cone de révolution x^2 + y^2 -z^2*tan(a)^2 =0.</div>
</dd>
<dt><span class="memberNameLink"><a href="formes/Droite.html#vectCoordoA1--">vectCoordoA1()</a></span> - Method in class formes.<a href="formes/Droite.html" title="class in formes">Droite</a></dt>
<dd>
<div class="block">la methode vectCoordoA1
 
Cette methode permet de renvoyer un vecteur dont la coordonné première est un pour facilité les calcul liée au calcul d'intersection.</div>
</dd>
<dt><span class="memberNameLink"><a href="formes/Droite.html#vecteur--">vecteur()</a></span> - Method in class formes.<a href="formes/Droite.html" title="class in formes">Droite</a></dt>
<dd>
<div class="block">la methode vecteur
 
Cette methode permet de renvoyer un vecteur.</div>
</dd>
<dt><a href="formes/Vecteur.html" title="class in formes"><span class="typeNameLink">Vecteur</span></a> - Class in <a href="formes/package-summary.html">formes</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Vecteur.html#Vecteur-double-double-double-">Vecteur(double, double, double)</a></span> - Constructor for class formes.<a href="formes/Vecteur.html" title="class in formes">Vecteur</a></dt>
<dd>&nbsp;</dd>
<dt><span class="memberNameLink"><a href="formes/Droite.html#vecteurUnitair--">vecteurUnitair()</a></span> - Method in class formes.<a href="formes/Droite.html" title="class in formes">Droite</a></dt>
<dd>
<div class="block">la methode vecteurUnitair 
 
        Un vecteur unitaire est un vecteur dont la norme vaut 1.</div>
</dd>
<dt><span class="memberNameLink"><a href="formes/Plan.html#vectorme--">vectorme()</a></span> - Method in class formes.<a href="formes/Plan.html" title="class in formes">Plan</a></dt>
<dd>
<div class="block">la methode vectorme
 
Cette méthode cherche les valeur xyz du vecteur normal au plan.</div>
</dd>
</dl>
<a name="I:X">
<!--   -->
</a>
<h2 class="title">X</h2>
<dl>
<dt><span class="memberNameLink"><a href="formes/Point.html#x">x</a></span> - Variable in class formes.<a href="formes/Point.html" title="class in formes">Point</a></dt>
<dd>&nbsp;</dd>
</dl>
<a name="I:Y">
<!--   -->
</a>
<h2 class="title">Y</h2>
<dl>
<dt><span class="memberNameLink"><a href="formes/Point.html#y">y</a></span> - Variable in class formes.<a href="formes/Point.html" title="class in formes">Point</a></dt>
<dd>&nbsp;</dd>
</dl>
<a name="I:Z">
<!--   -->
</a>
<h2 class="title">Z</h2>
<dl>
<dt><span class="memberNameLink"><a href="formes/Point.html#z">z</a></span> - Variable in class formes.<a href="formes/Point.html" title="class in formes">Point</a></dt>
<dd>&nbsp;</dd>
</dl>
<a href="#I:A">A</a>&nbsp;<a href="#I:B">B</a>&nbsp;<a href="#I:C">C</a>&nbsp;<a href="#I:D">D</a>&nbsp;<a href="#I:E">E</a>&nbsp;<a href="#I:F">F</a>&nbsp;<a href="#I:G">G</a>&nbsp;<a href="#I:I">I</a>&nbsp;<a href="#I:L">L</a>&nbsp;<a href="#I:M">M</a>&nbsp;<a href="#I:N">N</a>&nbsp;<a href="#I:O">O</a>&nbsp;<a href="#I:P">P</a>&nbsp;<a href="#I:R">R</a>&nbsp;<a href="#I:S">S</a>&nbsp;<a href="#I:T">T</a>&nbsp;<a href="#I:V">V</a>&nbsp;<a href="#I:X">X</a>&nbsp;<a href="#I:Y">Y</a>&nbsp;<a href="#I:Z">Z</a>&nbsp;</div>
<!-- ======= START OF BOTTOM NAVBAR ====== -->
<div class="bottomNav"><a name="navbar.bottom">
<!--   -->
</a>
<div class="skipNav"><a href="#skip.navbar.bottom" title="Skip navigation links">Skip navigation links</a></div>
<a name="navbar.bottom.firstrow">
<!--   -->
</a>
<ul class="navList" title="Navigation">
<li><a href="overview-summary.html">Overview</a></li>
<li>Package</li>
<li>Class</li>
<li><a href="overview-tree.html">Tree</a></li>
<li><a href="deprecated-list.html">Deprecated</a></li>
<li class="navBarCell1Rev">Index</li>
<li><a href="help-doc.html">Help</a></li>
</ul>
</div>
<div class="subNav">
<ul class="navList">
<li>Prev</li>
<li>Next</li>
</ul>
<ul class="navList">
<li><a href="index.html?index-all.html" target="_top">Frames</a></li>
<li><a href="index-all.html" target="_top">No&nbsp;Frames</a></li>
</ul>
<ul class="navList" id="allclasses_navbar_bottom">
<li><a href="allclasses-noframe.html">All&nbsp;Classes</a></li>
</ul>
<div>
<script type="text/javascript"><!--
  allClassesLink = document.getElementById("allclasses_navbar_bottom");
  if(window==top) {
    allClassesLink.style.display = "block";
  }
  else {
    allClassesLink.style.display = "none";
  }
  //-->
</script>
</div>
<a name="skip.navbar.bottom">
<!--   -->
</a></div>
<!-- ======== END OF BOTTOM NAVBAR ======= -->
</body>
</html>
